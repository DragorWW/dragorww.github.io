---
import SectionTitle from "./SectionTitle.astro";
import SkillTag from "./SkillTag.astro";

interface Skill {
  name: string;
  version?: string;
}

interface ExperienceItem {
  year: number;
  isCurrent?: boolean;
  role: string;
  company: string;
  location: string;
  description: string;
  achievements: string[];
  skills?: Skill[];
}

interface Education {
  year: number;
  degree: string;
  institution: string;
  location: string;
  description: string;
}

const experience: ExperienceItem[] = [
  {
    year: 2024,
    isCurrent: true,
    role: "CTO",
    company: "Ultimate Education",
    location: "Москва",
    description: "Руководство IT-стратегией холдинга из 7 компаний:",
    achievements: [
      "Масштабирование IT-решений для холдинга из 7 компаний",
      "Разработка и внедрение единой IT-стратегии",
      "Оптимизация бюджета и ресурсов через централизацию систем",
      "Создание комплексной аналитической платформы",
    ],
    skills: [
      { name: "Kubernetes" },
      { name: "React" },
      { name: "TypeScript" },
      { name: "Python" },
      { name: "Django" },
    ],
  },
  {
    year: 2020,
    role: "CTO",
    company: "XYZ School",
    location: "Москва",
    description: "Ключевые достижения за 3 года 10 месяцев:",
    achievements: [
      "Разработка и внедрение LMS системы",
      "Внедрение продуктовой аналитики на базе Metabase",
      "Автоматизация бизнес-процессов и интеграция систем",
    ],
    skills: [
      { name: "Kubernetes" },
      { name: "Terraform" },
      { name: "React" },
      { name: "TypeScript" },
      { name: "CSS Modules" },
      { name: "GraphQL" },
      { name: "REST" },
      { name: "Python" },
      { name: "Django" },
    ],
  },
  {
    year: 2019,
    role: "Principal Developer",
    company: "SberTech",
    location: "Санкт-Петербург",
    description: "Разработка внутреннего DevOps продукта:",
    achievements: [
      "Оптимизация производительности (10x улучшение)",
      "Проектирование архитектуры React-приложений",
    ],
    skills: [
      { name: "React" },
      { name: "TypeScript" },
      { name: "Java" },
      { name: "Kotlin" },
    ],
  },
  {
    year: 2016,
    role: "Principal Developer",
    company: "MagDevelopment",
    location: "Томск",
    description: "Развитие cargomart.ru в течение 3 лет:",
    achievements: [
      "Разработка архитектуры React-приложения",
      "Внедрение CI/CD и автоматизация процессов",
      "Стандартизация API и тестирования",
    ],
    skills: [
      { name: "React" },
      { name: "JavaScript" },
      { name: "Jenkins" },
      { name: "Jest" },
    ],
  },
  {
    year: 2013,
    role: "Head of Frontend",
    company: "UserStory",
    location: "Томск",
    description: "Руководство отделом фронтенд-разработки более 3 лет:",
    achievements: [
      "Участие в разработке более 30 проектов",
      "Проектирование фронтенд архитектуры для 7 проектов",
      "Развитие от middle developer до руководителя отдела",
    ],
    skills: [
      { name: "JavaScript" },
      { name: "React" },
      { name: "Redux" },
      { name: "Webpack" },
    ],
  },
];

const education: Education[] = [
  {
    year: 2014,
    degree: "Закончил Факультет психологии",
    institution: "Национальный исследовательский Томский государственный университет",
    location: "Томск",
    description: "Факультет психологии, Связи с общественностью",
  },
];
---

<section id="experience" class="experience">
  <SectionTitle title="Мой опыт" />
  <div class="timeline">
    {
      experience.map((item) => (
        <div class:list={["timeline-item", { current: item.isCurrent }]}>
          <div class="year">
            {item.year}
            {item.isCurrent && <span class="current-job">настоящее время</span>}
          </div>
          <div class="content">
            <h3>{item.role}</h3>
            <div class="company">
              {item.company}, {item.location}
            </div>
            <ul class="skill-tags">
              {item.skills?.map((skill) => (
                <SkillTag {...skill} />
              ))}
            </ul>
            <p>{item.description}</p>
            <ul>
              {item.achievements.map((achievement) => (
                <li>{achievement}</li>
              ))}
            </ul>
          </div>
        </div>
      ))
    }

    {
      education.map((item) => (
        <div class="timeline-item education">
          <div class="year">{item.year}</div>
          <div class="content">
            <h3>{item.degree}</h3>
            <div class="company">
              {item.institution}, {item.location}
            </div>
            <p>{item.description}</p>
          </div>
        </div>
      ))
    }
  </div>
</section>

<style>
  /* Experience Section */
  .experience {
    padding: 4rem 0;
  }

  .timeline {
    position: relative;
    padding-left: 2.5rem;
  }

  .timeline::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 2px;
    background: linear-gradient(
      to bottom,
      rgba(var(--accent-color-rgb), 0.1),
      rgba(var(--accent-color-rgb), 0.5),
      rgba(var(--accent-color-rgb), 0.1)
    );
  }

  .timeline-item {
    position: relative;
    padding-bottom: 2rem;
  }

  .timeline-item::after {
    content: "";
    position: absolute;
    left: -2.5rem;
    top: 12px;
    width: 2.5rem;
    height: 2px;
    background: linear-gradient(
      to right,
      rgba(var(--accent-color-rgb), 0.5) 0%,
      rgba(var(--accent-color-rgb), 0.5) 70%,
      rgba(var(--accent-color-rgb), 0.1) 100%
    );
  }

  .timeline-item::before {
    content: "";
    position: absolute;
    left: -2.5rem;
    top: 6px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: var(--card-bg);
    border: 2px solid var(--accent-color);
    transform: translateX(-6px);
    z-index: 1;
    transition: all 0.3s ease;
  }

  .timeline-item:hover::before {
    background-color: var(--accent-color);
    box-shadow: 0 0 10px rgba(var(--accent-color-rgb), 0.3);
  }

  .timeline-item.current::before {
    background-color: var(--accent-color);
    border-color: var(--accent-color);
    animation: pulseCurrentJob 2s ease-in-out infinite;
  }

  .timeline-item.education::before {
    border-style: dashed;
  }

  .timeline-item.education::after {
    background: linear-gradient(
      to right,
      rgba(var(--accent-color-rgb), 0.5) 50%,
      rgba(var(--accent-color-rgb), 0.1)
    );
    background-size: 6px 1px;
    background-repeat: repeat-x;
  }

  @keyframes pulseCurrentJob {
    0%,
    100% {
      box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0.4);
      transform: translateX(-6px) scale(1);
    }
    50% {
      box-shadow: 0 0 8px 2px rgba(var(--accent-color-rgb), 0.2);
      transform: translateX(-6px) scale(1.1);
    }
  }

  .year {
    color: var(--accent-color);
    font-weight: bold;
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
    padding-top: 0;
  }

  .current-job {
    font-size: 0.75rem;
    font-weight: normal;
    background: rgba(var(--accent-color-rgb), 0.1);
    color: var(--accent-color);
    padding: 2px 8px;
    border-radius: 12px;
    border: 1px solid rgba(var(--accent-color-rgb), 0.2);
    animation: glow 2s ease-in-out infinite;
  }

  @keyframes glow {
    0%,
    100% {
      box-shadow: 0 0 0 0 rgba(var(--accent-color-rgb), 0.2);
    }
    50% {
      box-shadow: 0 0 8px 0 rgba(var(--accent-color-rgb), 0.4);
    }
  }

  .content {
    margin-left: -0.5rem;
    background: rgba(var(--card-bg-rgb), 0.2);
    padding: 1.5rem;
    border-radius: 0.5rem;
    border: 1px solid rgba(var(--border-color-rgb), 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    transition: all 0.2s ease;
  }

  .timeline-item:hover .content {
    background: rgba(var(--card-bg-rgb), 0.25);
    transform: translateY(-1px);
    border-color: rgba(var(--accent-color-rgb), 0.15);
  }

  .company {
    color: var(--accent-color);
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  .content ul {
    list-style: none;
    margin: 1rem 0;
  }

  .content ul li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.75rem;
    color: var(--text-secondary);
  }

  .content ul li::before {
    content: "▹";
    position: absolute;
    left: 0;
    color: var(--accent-color);
  }

  .content ul li:last-child {
    margin-bottom: 0;
  }

  /* Обновляем стили для элемента образования в общем таймлайне */
  .timeline-item.education .content {
    background: rgba(var(--card-bg-rgb), 0.15);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  .timeline-item.education:hover .content {
    background: rgba(var(--card-bg-rgb), 0.2);
  }

  .timeline-item.education .university {
    font-weight: 500;
    color: var(--accent-color);
    margin-bottom: 0.5rem;
  }

  .timeline-item.education .faculty {
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  /* Обновляем стили для тегов навыков */
  .skill-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 1rem;
  }

  .content ul + .skill-tags {
    margin-top: 1.5rem;
  }

  @media screen and (max-width: var(--tablet)) {
    .experience {
      padding: 2rem 0;
    }

    .timeline {
      padding-left: 2rem;
    }

    .content {
      padding: 1rem;
    }

    .skill-tags {
      gap: 6px;
    }
  }

  @media screen and (max-width: var(--mobile)) {
    .timeline {
      padding-left: 1.5rem;
    }

    .timeline-item::before {
      width: 10px;
      height: 10px;
    }

    .timeline-item::after {
      width: 1.5rem;
    }

    .year {
      font-size: 0.9rem;
    }
  }
</style>
