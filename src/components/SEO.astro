---
import { useTranslations } from "../utils/i18n";
import { LANGUAGES } from "../constants/languages";

interface Props {
  title: string;
  description: string;
  keywords: string;
}

const { title, description, keywords } = Astro.props;
const { lang } = useTranslations(Astro);

// Получаем текущий URL
const currentPath = Astro.url.pathname;
const baseUrl = Astro.site?.toString() || "https://dragorww.space";

// Добавляем путь к OG изображению
const ogImageUrl = new URL("/assets/og-image.png", baseUrl).toString();

// Формируем ссылки для разных языков
const alternateLinks = [
  {
    lang: LANGUAGES.RU,
    href: `/ru${currentPath.replace(/^\/(ru|en)/, "")}`,
    isDefault: LANGUAGES.RU === lang,
  },
  {
    lang: LANGUAGES.EN,
    href: `/en${currentPath.replace(/^\/(ru|en)/, "")}`,
    isDefault: LANGUAGES.EN === lang,
  },
];

// Получаем канонический URL для текущей страницы
const canonicalUrl = new URL(
  alternateLinks.find((link) => link.isDefault)?.href || currentPath,
  baseUrl,
).toString();
---

<!-- Базовые мета-теги -->
<title>{title}</title>
<meta name="description" content={description} />
<meta name="keywords" content={keywords} />

<!-- Канонический URL -->
<link rel="canonical" href={canonicalUrl} />

<!-- Языковые мета-теги -->
<meta property="og:locale" content={`${lang}_${lang.toUpperCase()}`} />
<meta name="language" content={lang} />

<!-- Open Graph теги -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:image" content={ogImageUrl} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />

<!-- Twitter теги -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={ogImageUrl} />

<!-- Альтернативные языковые версии -->
{
  alternateLinks.map(({ lang: hrefLang, href }) => (
    <link
      rel="alternate"
      hreflang={hrefLang}
      href={new URL(href, baseUrl).toString()}
    />
  ))
}

<!-- x-default для поисковых систем -->
<link
  rel="alternate"
  href={new URL("/en", baseUrl).toString()}
  hreflang="x-default"
/>
